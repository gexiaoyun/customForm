{"ast":null,"code":"import \"antd/es/row/style/css\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/card/style/css\";\nimport _Card from \"antd/es/card\";\nvar _jsxFileName = \"/Users/gexiaoyun/git/customForm/src/page/edit.tsx\";\nimport * as React from 'react';\nimport { componentModules } from '../component';\nimport RightSetting from '../component/rightSetting';\nimport RightConfigurePage from './rightConfigurePage';\nimport '../css/edit.css';\n\nclass EditModal extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      list: [{\n        name: 'input',\n        type: 'input'\n      }, {\n        name: 'checkbox',\n        type: 'checkbox'\n      }, {\n        name: 'table',\n        type: 'table'\n      }, {\n        name: 'select',\n        type: 'select'\n      }],\n      showModule: [],\n      showModuleActive: -1,\n      rightConfigureMsg: {},\n      showRightSetting: false\n    };\n\n    this.showNode = (type, idx) => {\n      let addComponent = {\n        type: type,\n        content: {},\n        key: idx\n      };\n      this.setState({\n        showModule: [...this.state.showModule, addComponent]\n      });\n    };\n\n    this.nodeList = (val, index) => {\n      const CheckBox = componentModules.CheckBox,\n            InputQ = componentModules.InputQ,\n            TableComponent = componentModules.TableComponent,\n            SelectComponent = componentModules.SelectComponent;\n\n      switch (val.type) {\n        case 'input':\n          return React.createElement(InputQ, {\n            configure: val,\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          });\n\n        case 'checkbox':\n          return React.createElement(CheckBox, {\n            configure: val,\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          });\n\n        case 'table':\n          return React.createElement(TableComponent, {\n            configure: val,\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          });\n\n        case 'select':\n          return React.createElement(SelectComponent, {\n            configure: val,\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          });\n\n        default:\n          return '';\n      }\n    };\n\n    this.componentClick = index => {\n      const showModule = this.state.showModule;\n      showModule[index].key = index;\n      this.setState({\n        showModuleActive: index,\n        rightConfigureMsg: showModule[index],\n        showRightSetting: true\n      });\n    };\n\n    this.getRightSettingParame = param => {\n      const showModule = this.state.showModule;\n      Object.assign(showModule[param.key].content, param);\n      this.setState({\n        showModule: showModule\n      });\n    };\n\n    this.removeFromLable = index => {\n      const _this$state = this.state,\n            showModule = _this$state.showModule,\n            showRightSetting = _this$state.showRightSetting;\n      showModule.splice(index, 1);\n      this.setState({\n        showModule: showModule\n      }, () => {\n        if (this.state.showModule.length > 0) {\n          if (showRightSetting) {\n            this.componentClick(this.state.showModule.length - 1);\n          }\n        } else {\n          this.setState({\n            showRightSetting: false\n          });\n        }\n      });\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          list = _this$state2.list,\n          showModule = _this$state2.showModule,\n          rightConfigureMsg = _this$state2.rightConfigureMsg,\n          showRightSetting = _this$state2.showRightSetting,\n          showModuleActive = _this$state2.showModuleActive;\n    return React.createElement(_Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      className: \"form-left-module\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(_Card, {\n      title: \"\\u7EC4\\u4EF6\\u5217\\u8868\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        padding: '10px 0 0 10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"\\u57FA\\u7840\\u529F\\u80FD\"), list.map((o, idx) => {\n      return React.createElement(\"p\", {\n        className: \"from-label\",\n        onClick: () => {\n          this.showNode(o.type, idx);\n        },\n        key: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, o.name);\n    }))), React.createElement(_Col, {\n      span: 14,\n      offset: \"5\",\n      className: \"from-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(_Card, {\n      title: \"\\u8868\\u5355\\u533A\\u57DF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, showModule.map((val, index) => {\n      return React.createElement(React.Fragment, {\n        key: \"father-\".concat(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, val.content.lineBreak && React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        onClick: () => {\n          this.componentClick(index);\n        },\n        draggable: true,\n        className: \"from-list-module \".concat(showModuleActive === index ? 'active' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"mask\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), this.nodeList(val, index), React.createElement(RightSetting, {\n        index: index,\n        removeFromLable: this.removeFromLable,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      })));\n    }))), React.createElement(_Col, {\n      span: 4,\n      style: {\n        position: 'fixed',\n        top: '0',\n        right: showRightSetting ? '0' : '-100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(_Card, {\n      title: \"\\u53C2\\u6570\\u8BBE\\u7F6E\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(RightConfigurePage, {\n      configureMsg: rightConfigureMsg,\n      getRightSettingParame: this.getRightSettingParame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default EditModal;","map":{"version":3,"sources":["/Users/gexiaoyun/git/customForm/src/page/edit.tsx"],"names":["React","componentModules","RightSetting","RightConfigurePage","EditModal","Component","state","list","name","type","showModule","showModuleActive","rightConfigureMsg","showRightSetting","showNode","idx","addComponent","content","key","setState","nodeList","val","index","CheckBox","InputQ","TableComponent","SelectComponent","componentClick","getRightSettingParame","param","Object","assign","removeFromLable","splice","length","render","padding","map","o","lineBreak","position","top","right"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Row, Col, Card } from 'antd'\nimport { componentModules } from '../component'\nimport RightSetting from '../component/rightSetting'\nimport RightConfigurePage from './rightConfigurePage'\nimport '../css/edit.css'\n\nexport interface AddComponentType {\n    type: string;\n    content: any;\n    key: number;\n}\n\ninterface State {\n    list: any[];\n    showModule: any[];\n    rightConfigureMsg: any;\n    showRightSetting: boolean;\n    showModuleActive: number;\n}\n\nclass EditModal extends React.Component<{}, State> {\n\n    state: State = {\n        list: [{\n                name: 'input',\n                type: 'input'\n            },\n            {\n                name: 'checkbox',\n                type: 'checkbox'\n            },\n            {\n                name: 'table',\n                type: 'table'\n            },\n            {\n                name: 'select',\n                type: 'select'\n            }\n        ],\n        showModule: [],\n        showModuleActive: -1,\n        rightConfigureMsg: {},\n        showRightSetting: false\n    }\n\n    showNode = (type: string, idx: number) => {\n        let addComponent: AddComponentType = {\n            type: type,\n            content: {},\n            key: idx\n        }\n        this.setState({showModule: [...this.state.showModule, addComponent]})\n    }\n\n    nodeList = (val: AddComponentType, index: number) => {\n        const { CheckBox, InputQ, TableComponent, SelectComponent } = componentModules;\n        switch (val.type) {\n            case 'input':\n                return <InputQ configure={val} key={index} />;\n            case 'checkbox':\n                return <CheckBox configure={val} key={index} />;\n            case 'table':\n                return <TableComponent configure={val} key={index}/>;\n            case 'select':\n                return <SelectComponent configure={val} key={index}/>;\n            default:\n            return '';\n        }\n    }\n\n    componentClick = (index: number) => {\n        const { showModule } = this.state;\n        showModule[index].key = index\n        this.setState({\n            showModuleActive: index,\n            rightConfigureMsg: showModule[index],\n            showRightSetting: true\n        })\n    }\n\n    getRightSettingParame = (param: any) => {\n        const { showModule } = this.state;\n        Object.assign(showModule[param.key].content, param);\n        this.setState({showModule: showModule})\n    }\n\n    // 移除组件\n    removeFromLable = (index: number) => {\n        const { showModule, showRightSetting } = this.state;\n        showModule.splice(index, 1)\n        this.setState({showModule: showModule}, () => {\n            if (this.state.showModule.length > 0) {\n                if (showRightSetting) {\n                    this.componentClick(this.state.showModule.length - 1)\n                }\n            } else {\n                this.setState({showRightSetting: false})\n            }\n        })\n    }\n\n    render () {\n\n        const { list, showModule, rightConfigureMsg, showRightSetting, showModuleActive } = this.state;\n\n        return (\n            <Row>\n                <Col className=\"form-left-module\">\n                    <Card  title=\"组件列表\">\n                        <p style={{padding: '10px 0 0 10px'}}>基础功能</p>\n                        {\n                            list.map((o: any, idx: number) => {\n                                return <p className=\"from-label\" onClick={() => {this.showNode(o.type, idx); }} key={idx}> \n                                    {o.name}\n                                </p>\n                            })\n                        }\n                    </Card>\n                </Col>\n                <Col span={14} offset=\"5\" className=\"from-list\">\n                    <Card  title=\"表单区域\">\n                    {\n                        showModule.map((val: AddComponentType, index: number) => {\n                           return (\n                            <React.Fragment \n                                key={`father-${index}`}\n                            >   \n                                {\n                                   val.content.lineBreak && <br/>\n                                }\n                                <div\n                                    onClick={() => {this.componentClick(index)}}\n                                    draggable={true}\n                                    className={`from-list-module ${showModuleActive === index ? 'active' : '' }`}\n                                >\n                                    <p className=\"mask\"></p>\n                                    {this.nodeList(val, index)}\n                                    <RightSetting\n                                        index={index}\n                                        removeFromLable={this.removeFromLable}\n                                    />\n\n                                </div>\n                            </React.Fragment>\n                           )\n                        })\n                    }\n                    \n                    </Card>\n                </Col>\n                <Col \n                    span={4} \n                    style={{\n                        position: 'fixed',\n                        top: '0',\n                        right: showRightSetting ? '0' : '-100%'\n                    }}>\n                    <Card  title=\"参数设置\">\n                        <RightConfigurePage\n                            configureMsg={rightConfigureMsg} \n                            getRightSettingParame={this.getRightSettingParame}\n                        />\n                    </Card>\n                    \n                </Col>\n            </Row>\n        )\n    }\n}\n\nexport default EditModal\n"]},"metadata":{},"sourceType":"module"}