{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport Radio from './radio';\nimport { ConfigConsumer } from '../config-provider';\nimport RadioGroupContext from './context';\n\nvar RadioButton = function RadioButton(props) {\n  var radioGroupContext = React.useContext(RadioGroupContext);\n  return React.createElement(ConfigConsumer, null, function (_ref) {\n    var getPrefixCls = _ref.getPrefixCls;\n\n    var customizePrefixCls = props.prefixCls,\n        radioProps = __rest(props, [\"prefixCls\"]);\n\n    var prefixCls = getPrefixCls('radio-button', customizePrefixCls);\n\n    if (radioGroupContext) {\n      radioProps.checked = props.value === radioGroupContext.value;\n      radioProps.disabled = props.disabled || radioGroupContext.disabled;\n    }\n\n    return React.createElement(Radio, _extends({\n      prefixCls: prefixCls\n    }, radioProps));\n  });\n};\n\nexport default RadioButton;","map":null,"metadata":{},"sourceType":"module"}