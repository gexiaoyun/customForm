{"ast":null,"code":"import \"antd/es/table/style/css\";\nimport _Table from \"antd/es/table\";\nvar _jsxFileName = \"/Users/gexiaoyun/git/customForm/src/component/table.tsx\";\nimport * as React from 'react';\n\nclass TableComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tableColums: []\n    };\n\n    this.columns = () => {\n      let initialColumns = [{\n        title: '姓名',\n        dataIndex: 'name',\n        key: 'name'\n      }, {\n        title: '年龄',\n        dataIndex: 'age',\n        key: 'age'\n      }, {\n        title: '住址',\n        dataIndex: 'address',\n        key: 'address'\n      }];\n      this.setState({\n        tableColums: initialColumns\n      });\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.configure.content && Object.keys(nextProps.configure.content).length > 0) {\n      if (nextProps.configure.content.tableHead && nextProps.configure.content.tableHead.length > 0) {\n        let headArr = nextProps.configure.content.tableHead.map((o, i) => {\n          let param = {\n            title: o.label,\n            dataIndex: o.value\n          };\n          return param;\n        });\n        this.setState({\n          tableColums: headArr\n        });\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.columns();\n  }\n\n  render() {\n    const content = this.props.configure.content;\n    const tableColums = this.state.tableColums;\n    const dataSource = [];\n    let propsStyle = {\n      style: {\n        width: content.width ? \"\".concat(content.width, \"px\") : '500px'\n      }\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(_Table, Object.assign({}, propsStyle, {\n      dataSource: dataSource,\n      columns: tableColums,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default TableComponent;","map":{"version":3,"sources":["/Users/gexiaoyun/git/customForm/src/component/table.tsx"],"names":["React","TableComponent","Component","state","tableColums","columns","initialColumns","title","dataIndex","key","setState","componentWillReceiveProps","nextProps","configure","content","Object","keys","length","tableHead","headArr","map","o","i","param","label","value","componentDidMount","render","props","dataSource","propsStyle","style","width"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAWA,MAAMC,cAAN,SAA6BD,KAAK,CAACE,SAAnC,CAAiE;AAAA;AAAA;AAAA,SAE/DC,KAF+D,GAE7C;AAChBC,MAAAA,WAAW,EAAE;AADG,KAF6C;;AAAA,SAyB7DC,OAzB6D,GAyBnD,MAAM;AACd,UAAIC,cAAc,GAAG,CACnB;AACEC,QAAAA,KAAK,EAAE,IADT;AAEEC,QAAAA,SAAS,EAAE,MAFb;AAGEC,QAAAA,GAAG,EAAE;AAHP,OADmB,EAMnB;AACEF,QAAAA,KAAK,EAAE,IADT;AAEEC,QAAAA,SAAS,EAAE,KAFb;AAGEC,QAAAA,GAAG,EAAE;AAHP,OANmB,EAWnB;AACEF,QAAAA,KAAK,EAAE,IADT;AAEEC,QAAAA,SAAS,EAAE,SAFb;AAGEC,QAAAA,GAAG,EAAE;AAHP,OAXmB,CAArB;AAiBA,WAAKC,QAAL,CAAc;AAACN,QAAAA,WAAW,EAAEE;AAAd,OAAd;AACD,KA5C4D;AAAA;;AAM7DK,EAAAA,yBAAyB,CAAEC,SAAF,EAAkB;AACvC,QAAIA,SAAS,CAACC,SAAV,CAAoBC,OAApB,IAA+BC,MAAM,CAACC,IAAP,CAAYJ,SAAS,CAACC,SAAV,CAAoBC,OAAhC,EAAyCG,MAAzC,GAAkD,CAArF,EAAwF;AACtF,UAAIL,SAAS,CAACC,SAAV,CAAoBC,OAApB,CAA4BI,SAA5B,IAAyCN,SAAS,CAACC,SAAV,CAAoBC,OAApB,CAA4BI,SAA5B,CAAsCD,MAAtC,GAA+C,CAA5F,EAA+F;AAC7F,YAAIE,OAAO,GAAGP,SAAS,CAACC,SAAV,CAAoBC,OAApB,CAA4BI,SAA5B,CAAsCE,GAAtC,CAA0C,CAACC,CAAD,EAASC,CAAT,KAAuB;AAC7E,cAAIC,KAAK,GAAG;AACVhB,YAAAA,KAAK,EAAEc,CAAC,CAACG,KADC;AAEVhB,YAAAA,SAAS,EAAEa,CAAC,CAACI;AAFH,WAAZ;AAIA,iBAAOF,KAAP;AACD,SANa,CAAd;AAOA,aAAKb,QAAL,CAAc;AAACN,UAAAA,WAAW,EAAEe;AAAd,SAAd;AACD;AACF;AACJ;;AAEDO,EAAAA,iBAAiB,GAAI;AACnB,SAAKrB,OAAL;AACD;;AAwBDsB,EAAAA,MAAM,GAAoB;AAAA,UACDb,OADC,GACa,KAAKc,KADlB,CACdf,SADc,CACDC,OADC;AAAA,UAEdV,WAFc,GAEE,KAAKD,KAFP,CAEdC,WAFc;AAGtB,UAAMyB,UAAiB,GAAG,EAA1B;AACE,QAAIC,UAAU,GAAG;AACfC,MAAAA,KAAK,EAAE;AACHC,QAAAA,KAAK,EAAElB,OAAO,CAACkB,KAAR,aAAmBlB,OAAO,CAACkB,KAA3B,UAAuC;AAD3C;AADQ,KAAjB;AAKF,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,8CAAWF,UAAX;AAAuB,MAAA,UAAU,EAAED,UAAnC;AAA+C,MAAA,OAAO,EAAEzB,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADH,CADJ;AAKH;;AA7D4D;;AAgEjE,eAAeH,cAAf","sourcesContent":["import * as React from 'react'\nimport { Table } from 'antd'\n\nexport interface IntProps {\n  configure: any\n}\n\ninterface IntState {\n  tableColums: any[]\n}\n\nclass TableComponent extends React.Component<IntProps, IntState> {\n\n  state: IntState = {\n    tableColums: []\n  }\n\n    componentWillReceiveProps (nextProps: any) {\n        if (nextProps.configure.content && Object.keys(nextProps.configure.content).length > 0) {\n          if (nextProps.configure.content.tableHead && nextProps.configure.content.tableHead.length > 0) {\n            let headArr = nextProps.configure.content.tableHead.map((o: any, i: number) => {\n              let param = {\n                title: o.label,\n                dataIndex: o.value\n              }\n              return param\n            })\n            this.setState({tableColums: headArr})\n          }\n        }\n    }\n\n    componentDidMount () {\n      this.columns()\n    }\n\n    columns = () => {\n      let initialColumns = [\n        {\n          title: '姓名',\n          dataIndex: 'name',\n          key: 'name',\n        },\n        {\n          title: '年龄',\n          dataIndex: 'age',\n          key: 'age',\n        },\n        {\n          title: '住址',\n          dataIndex: 'address',\n          key: 'address',\n        },\n      ]\n      this.setState({tableColums: initialColumns}) \n    }\n      \n\n    render(): React.ReactNode {\n        const { configure: { content } } = this.props\n        const { tableColums } = this.state\n        const dataSource: any[] = [];\n          let propsStyle = {\n            style: {\n                width: content.width ? `${content.width}px` : '500px',\n            }\n        }\n        return (\n            <div>\n               <Table {...propsStyle} dataSource={dataSource} columns={tableColums} />\n            </div>\n        );\n    }\n}\n\nexport default TableComponent"]},"metadata":{},"sourceType":"module"}